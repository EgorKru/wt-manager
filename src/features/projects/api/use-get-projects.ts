import { useQuery } from "@tanstack/react-query";
import { browserApiClient } from "@/lib/api-client-browser";

interface UseGetProjectsProps {
  workspaceId: string;
}

export const useGetProjects = ({ workspaceId }: UseGetProjectsProps) => {
  // –î–æ–±–∞–≤–ª—è–µ–º stack trace –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–∫—É–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ö—É–∫
  console.log('üîç useGetProjects called from:', new Error().stack?.split('\n')[2]?.trim());
  
  const query = useQuery({
    queryKey: ["projects", workspaceId],
    queryFn: async () => {
      console.log('üöÄ useGetProjects: ACTUAL API CALL for workspace:', workspaceId);
      console.log('üìç API call stack trace:', new Error().stack?.split('\n')[2]?.trim());
      
      // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∞–µ–º –∏—Ö –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞–ø—Ä—è–º—É—é
      const projects = await browserApiClient.getUserProjects();
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
      const documents = (projects || []).map((project: any) => ({
        $id: project.projectId,
        $createdAt: project.createdAt || new Date().toISOString(),
        $updatedAt: project.updatedAt || new Date().toISOString(),
        name: project.projectName,
        workspaceId: workspaceId || 'default-workspace',
        imageUrl: project.imageUrl || project.image,
      }));
      
      console.log('useGetProjects: transformed documents:', documents);
      
      return {
        documents,
        total: documents.length,
      };
    },
    staleTime: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç - –¥–∞–Ω–Ω—ã–µ —Å—á–∏—Ç–∞—é—Ç—Å—è —Å–≤–µ–∂–∏–º–∏
    gcTime: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç - –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –≤ –∫–µ—à–µ  
    refetchOnWindowFocus: false, // –ù–µ –ø–µ—Ä–µ–∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –æ–∫–Ω–∞
    refetchOnMount: false, // –ù–µ –ø–µ—Ä–µ–∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–µ—à
  });
  return query;
};
